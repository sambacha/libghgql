query pullRequest(
  $teamId: ID!
  $orgOwner: String!
  $repoName: String!
  $prName: String!
) {
  ChatTeam(id: $teamId) {
    team {
      orgs(owner: $orgOwner) {
        repo(name: $repoName) {
          name
          owner
          pullRequest(name: $prName) {
            _id
            number
            name
            body
            state
            merged
            timestamp
            title
            createdAt
            mergedAt
            baseBranchName
            branchName
            head {
              sha
            }
            lastAssignedBy {
              login
              name
              person {
                gitHubId {
                  login
                }
                chatId {
                  screenName
                  id
                }
              }
            }
            closedAt
            branch {
              name
              timestamp
            }
            author {
              login
              name
              person {
                gitHubId {
                  login
                }
                chatId {
                  screenName
                  id
                }
              }
            }
            merger {
              login
              name
              person {
                gitHubId {
                  login
                }
                chatId {
                  screenName
                  id
                }
              }
            }
            assignees {
              login
              name
              person {
                gitHubId {
                  login
                }
                chatId {
                  screenName
                  id
                }
              }
            }
            reviewers {
              login
              name
              person {
                gitHubId {
                  login
                }
                chatId {
                  screenName
                  id
                }
              }
            }
            labels {
              name
            }
            comments {
              body
            }
            commits(first: 10, orderBy: [timestamp_desc]) {
              sha
              message
              timestamp
              tags {
                name
                release {
                  name
                  timestamp
                }
              }
              statuses {
                state
                description
                context
                targetUrl
              }
              author {
                login
                name
                person {
                  gitHubId {
                    login
                  }
                  chatId {
                    screenName
                    id
                  }
                }
              }
              builds(trigger: push, orderBy: [timestamp_desc]) {
                name
                buildUrl
                buildId
                status
                timestamp
              }
            }
            builds(trigger: pull_request, orderBy: [timestamp_desc]) {
              name
              buildUrl
              buildId
              status
              timestamp
            }
            reviews {
              state
              by {
                login
              }
            }
            repo {
              name
              owner
              channels {
                name
                team {
                  id
                }
              }
              allowRebaseMerge
              allowSquashMerge
              allowMergeCommit
              defaultBranch
              org {
                provider {
                  url
                  apiUrl
                  gitUrl
                  providerId
                  providerType
                }
                team {
                  id
                  chatTeams {
                    id
                    preferences {
                      name
                      value
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
